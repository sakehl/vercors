class Storage {
  int v, temp;

  constructor(int v) {
    this.v = v;
  }
  
  void inc() {
  	v = v+1;
  }
  
  int num() {
  	return 2;
  }
  
  void bla(int b) {}
}


requires x >= 0;
seq_program SeqProgram(int x, int y) {
   thread s1 = Storage(x);
   thread s2 = Storage(y);

  //int num() {}
  
  void foo() {
     s1.temp = 7;
  }
  
  //void bar(int a) {}

  run {
    if(s1.v == 5 && s2.v == 6) {
    	s1.temp = s1.num();
 //     s1.temp = num();
 //       s1.temp = s1.v + s2.v;
 
    } else if(s1.v == 0 && s2.v == 0) {
    	while(s1.temp == 1 && s2.v == 3) {
    	  s1.temp = 5;
    	}
    }
    for(s1.temp = 0; s1.temp > 10 && s2.v == 6; s1.v = s1.v+1) {
    	s2.temp = 6;
    }
//    if(s1.temp > 10 && s1.v == 6) {
    	s2.v = 2;
//    }
    s1.temp = s1.v;
    s2.temp = s2.v;
    foo();
    //bar(1);
    s1.inc();
    s1.bla(s1.temp);
    // s1.bla(s2.temp);
    s1.v = s2.temp;
    s2.v = s1.temp;
    assert s1.v == \old(s2.v);
    assert s2.v == \old(s1.v);
  }
  
  
}

