prover_type bv8 \smtlib `(_ BitVec 8)`;

prover_function bv8 bv8_from_int(int x) \smtlib `(_ int2bv 8)`;
prover_function int bv8_to_int(bv8 x) \smtlib `(_ bv2int 8)`;
prover_function bv8 bv8_and(bv8 x, bv8 y) \smtlib `bvand`;
prover_function bv8 bv8_or(bv8 x, bv8 y) \smtlib `bvor`;
prover_function bv8 bv8_xor(bv8 x, bv8 y) \smtlib `bvxor`;
prover_function bv8 bv8_shl(bv8 x, bv8 y) \smtlib `bvshl`;
prover_function bv8 bv8_shr(bv8 x, bv8 y) \smtlib `bvashr`;
prover_function bv8 bv8_ushr(bv8 x, bv8 y) \smtlib `bvlshr`;
prover_function bv8 bv8_not(bv8 x) \smtlib `bvnot`;

ensures \result == (0 <= x && x <= 255);
ensures \result == (x == bv8_to_int(bv8_from_int(x)));
pure boolean u8_is_inbounds(int x);

ensures \polarity_dependent(u8_is_inbounds(x), true);
pure boolean u8_assume_inbounds(int x) = true;

requires u8_is_inbounds(x);
pure int u8_require_inbounds(int x) = x;

ensures \result == (-128 <= x && x <= 127);
ensures \result == (x == bv8_to_int(bv8_from_int(x)));
pure boolean s8_is_inbounds(int x);

ensures \polarity_dependent(s8_is_inbounds(x), true);
pure boolean s8_assume_inbounds(int x) = true;

requires s8_is_inbounds(x);
pure int s8_require_inbounds(int x) = x;

